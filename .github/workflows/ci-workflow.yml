name: Build Updater
on:
  workflow_dispatch:
  push:
  pull_request:
concurrency: build_xl

jobs:
  build-release:
    name: Build Release on Windows
    if: startsWith(github.ref, 'refs/tags/')
    runs-on: windows-2022
    steps:
      - uses: actions/checkout@v1
      - name: Initialize Submodules
        run: git submodule update --init --recursive
      - name: Restore Nuget Packages
        run: |
          dotnet restore
      - name: Define VERSION
        run: |
          $env:COMMIT = $env:GITHUB_SHA.Substring(0, 7)
          $env:REPO_NAME = $env:GITHUB_REPOSITORY -replace '.*/'
          $env:BRANCH = $env:GITHUB_REF -replace '.*/'

          ($env:REPO_NAME) >> VERSION
          ($env:BRANCH) >> VERSION
          ($env:COMMIT) >> VERSION
      - name: Build DotNet4 for Release
        run: |
          cd "C:\Program Files\Microsoft Visual Studio\2022\Enterprise\MSBuild\Current\Bin\"
           .\MSBuild.exe $Env:GITHUB_WORKSPACE\Dalamud.Updater.sln /t:Build /p:Configuration=Release
      - name: Create package
        shell: pwsh
        run: |
          Write-Host "Create Zip package"
          Compress-Archive -Force Dalamud.Updater\bin\Release\net48\Dalamud.Updater.exe .\release.zip 
      - name: Hash
        id: hash
        run: |
          $HASH = (Get-FileHash .\release.zip -Algorithm MD5).Hash
          "HASH=$HASH" >> $env:GITHUB_OUTPUT
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          body: "Hash: ${{ steps.hash.outputs.HASH }}"
          prerelease: true
      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./release.zip
          asset_name: Dalamud.Updater.zip
          asset_content_type: application/zip
  build:
    name: Build on Windows
    runs-on: windows-2022
    if: "!startsWith(github.ref, 'refs/tags/')"
    steps:
      - uses: actions/checkout@v1
      - name: Initialize Submodules
        run: git submodule update --init --recursive

      - name: Restore Nuget Packages
        run: |
          dotnet restore
      - name: Define VERSION
        run: |
          $env:COMMIT = $env:GITHUB_SHA.Substring(0, 7)
          $env:REPO_NAME = $env:GITHUB_REPOSITORY -replace '.*/'
          $env:BRANCH = $env:GITHUB_REF -replace '.*/'

          ($env:REPO_NAME) >> VERSION
          ($env:BRANCH) >> VERSION
          ($env:COMMIT) >> VERSION
      - name: Build DotNet4 Master
        run: |
          cd "C:\Program Files\Microsoft Visual Studio\2022\Enterprise\MSBuild\Current\Bin\"
           .\MSBuild.exe $Env:GITHUB_WORKSPACE\Dalamud.Updater.sln /t:Build /p:Configuration=Release
      - name: Upload artifact
        uses: actions/upload-artifact@master
        with:
          name: Updater-artifact
          path: Dalamud.Updater\bin\Release\net48
